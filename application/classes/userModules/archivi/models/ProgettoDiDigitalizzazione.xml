<?xml version="1.0" encoding="utf-8"?>
<model:Model
    xmlns:pnx="http://www.pinax.org/dtd/1.0/"
    xmlns:model="pinax.models.*/"
    model:tableName="archivi.models.ProgettoDiDigitalizzazione"
    model:usePrefix="true"
    model:type="document"
    model:baseClass="metafad.common.models.ActiveRecordDocument">

<model:Define>
    <model:Field name="fulltext" type="string" index="fulltext" onlyIndex="true" />
    <model:Field name="_denominazione" type="string" index="true" />
    <model:Field name="pageId" type="string" />
    <model:Field name="root" type="string" index="true"/>
    <model:Field name="isValid" type="int"/>
    <model:Field name="externalID" description="ID importazione" type="string" index="true"/>
    <model:Field validator="notempty" name="acronimoSistema" description="Acronimo di sistema" type="string"/>
    <model:Field name="identificativo" description="Identificativo per il Progetto di Digitalizzazione;" type="string"/>
    <model:Field name="codiceIdentificativoSistema" description="Codice identificativo di sistema" type="string"/>
    <model:Field validator="notempty" name="denominazione" description="Denominazione del progetto" type="string"/>
    <model:Field name="acronimoProgetto" description="Acronimo del progetto" type="string"/>
    <model:Field validator="notempty" name="riferimentiBibliografici" description="Riferimenti bibliografici" type="object" readFormat="false"/>
    <model:Field validator="notempty" name="entePrincipaleDenominazione" description="Ente principale coinvolto" type="string"/>
    <model:Field validator="notempty" name="entePrincipaleQualifica" description="Ente principale qualifica" type="string"/>
    <model:Field validator="notempty" name="enteCoinvolto" description="Ente coinvolto" type="object" readFormat="false"/>
    <model:Field validator="notempty" name="tipologia" description="Tipologia del progetto" type="object" readFormat="false"/>
    <model:Field validator="notempty" name="storiaProgetto" description="Storia del progetto" type="object" readFormat="false"/>
    <model:Field validator="notempty" name="obiettivi" description="Obiettivi" type="string"/>   
    <model:Field validator="notempty" name="criteriSelezione" description="Criteri di selezione e descrizione del materiale" type="string"/>   
    <model:Field validator="notempty" name="criteriRiproduzione" description="Criteri di riproduzione" type="string"/>   
    <model:Field validator="notempty" name="coperturaSpaziale" description="Copertura spaziale della documentazione" type="string"/>   
    <model:Field validator="notempty" name="coperturaTemporale" description="Copertura temporale della documentazione" type="string"/>   
    <model:Field name="architetturaSistema" description="Architettura del sistema digitale di gestione dati e immagini" type="text"/>
    <model:Field name="dimensioniArchivio" description="Dimensioni archivio digitale" type="text"/>
    <model:Field name="formatoImg" description="Formato delle immagini on-line" type="text"/>
    <model:Field name="formatiPerRiproduzione" description="Formati disponibili per la riproduzione" type="text"/>
    <model:Field name="risoluzioni" description="Risoluzioni adottate" type="text"/>
    <model:Field name="gestioniColore" description="Gestioni del colore" type="text"/>
    <model:Field name="altriSoftware" description="Altri software o piattaforme tecnologica utilizzate per la gestione/pubblicazione dei materiali" type="text"/>
    <model:Field name="strumentazioneRipresa" description="Strumentazione di ripresa" type="text"/>
    <model:Field name="standardUtilizzati" description="Standard utilizzati" type="text"/>
    <model:Field validator="notempty" name="cronologia" description="Indicazioni cronologiche di sintesi sulla documentazione interessata dal progetto" type="object" readFormat="false"/>
    <model:Field validator="notempty" name="areeTematiche" description="indicazioni sulle aree tematiche di sintesi sulla documentazione interessata dal progetto" type="string"/>
    <model:Field validator="notempty" name="complessi" description="Complessi archivistici" type="object" readFormat="false"/>
    <model:Field name="complessiLinked" description="Numero complessi collegati" type="int"/>
    <model:Field name="conservatore" description="Soggetti conservatori" type="object" readFormat="false"/>
    <model:Field validator="notempty" name="ente" description="Ente" type="object" readFormat="false"/>
    <model:Field validator="notempty" name="entiRel" description="Enti" type="object" readFormat="false"/>
    <model:Field name="accesso" description="Accesso" type="object" readFormat="false"/>
    <model:Field name="copyright" description="Copyright" type="object" readFormat="false"/>
    <model:Field name="linguaDescrizioneRecord" description="Lingua di descrizione del record" type="string"/>
    <model:Field validator="notempty" name="compilazione" description="Compilazione" type="object" readFormat="false"/>
    <model:Field name="osservazioni" description="Osservazioni" type="text"/>
    <model:Field name="visibility" description="Visibilit&#xE0; FE" type="string"/>
    <model:Field name="mediaCollegati" description="Media Collegati" type="string"/>
</model:Define>

 <model:Script parent="model"><![CDATA[
    public function publish($values = null, $comment='', $forceNew=false)
    {
        $r = parent::publish($values, $comment, $forceNew);
        return $r;
    }

    public function save($values=null, $forceNew=false, $status='DRAFT', $comment='')
    {
        $isNew = $this->isNew();
        $r = parent::save($values, $forceNew, $status, $comment);

        return $r;
    }

    public function getSolrDocument()
    {
        $solrModel = array (
            '__id' => 'id',
            'document' => 'doc_store',
            '__model' => 'document_type_t',
            'updateDateTime' => 'update_at_s',
            '_hasDigital' => 'digitale_i',
            'isValid' => 'isValid_i',
            'externalID' => 'externalID_s',
            'denominazione' => 'denominazione_s',
            'identificativo' => 'identificativo_s',
            'visibility' => 'visibility_s',
            'entePrincipaleDenominazione' => 'entePrincipale_s',
            '@storiaProgetto->estremoCronologicoTestuale' => 'cronologia_s',
            '@storiaProgetto[!]->estremoRemoto_codificaData:onlyYear' => 'estremoRemoto_i',
            '@storiaProgetto[!]->estremoRecente_codificaData:onlyYear' => 'estremoRecente_i',
            '@storiaProgetto[!]->estremoRemoto_secolo:romanToInteger' => 'estremoRemotoSecolo_i',
            '@storiaProgetto[!]->estremoRecente_secolo:romanToInteger' => 'estremoRecenteSecolo_i',
            '@enteCoinvolto->entitaDenominazione->text[]' => 'enti_ss',
            '@tipologia->tipologiaProgetto[]' => 'tipologia_ss',
            '@areeTematiche->areeTematiche[]' => 'aree_tematiche_ss',
            '@complessi->linkComplessi->text[]' => 'complessi_ss',
            '@conservatore->soggettoConservatore->text[]' => 'conservatori_ss',
            '@entiRel->enteRel->text[]' => 'enti_collegati_ss',
            '@compilazione->redattore[]' => 'redattore_ss',
            '@compilazione->azione[]' => 'azione_ss'
            );
        
        $solrModel = array_merge(parent::getSolrDocument(), $solrModel);

        return $solrModel;
    }

    public function getBeAdvancedSearchFields()
    {
        $searchFields = array (
        );
        return $searchFields;
    }

    public function getRecordId()
    {
      return $this->_denominazione;
    }
    ]]></model:Script>

    <model:Query name="mysql_getByIndexedInt">
        <![CDATA[
        SELECT
          `doc`.*,
          `doc_detail`.*
        FROM
          `documents_tbl` `doc`
          JOIN `documents_detail_tbl` `doc_detail` ON (
            `doc`.`document_id` = `doc_detail`.`document_detail_FK_document_id`
          )
          AND (
            `doc_detail`.`document_detail_status` = 'PUBLISHED' OR
            `doc_detail`.`document_detail_status` = 'DRAFT'
          )
          AND (
            `doc_detail`.`document_detail_FK_language_id` = :languageId
          )
          LEFT JOIN `documents_index_int_tbl` `index0` ON (
            `doc_detail`.`document_detail_id` = `index0`.`document_index_int_FK_document_detail_id`
          )
          AND (
            `index0`.`document_index_int_name` = :intName
          )
        WHERE
          (
            `index0`.`document_index_int_value` = :intVal
          )
        GROUP BY `doc`.`document_id`
        ORDER BY `doc_detail`.`document_detail_FK_document_id` DESC
    ]]>
    </model:Query>

    <model:Query name="mysql_getByIndexedText">
        <![CDATA[
        SELECT
          `doc`.*,
          `doc_detail`.*
        FROM
          `documents_tbl` `doc`
          JOIN `documents_detail_tbl` `doc_detail` ON (
            `doc`.`document_id` = `doc_detail`.`document_detail_FK_document_id`
          )
          AND (
            `doc_detail`.`document_detail_status` = 'PUBLISHED' OR
            `doc_detail`.`document_detail_status` = 'DRAFT'
          )
          AND (
            `doc_detail`.`document_detail_FK_language_id` = :languageId
          )
          LEFT JOIN `documents_index_text_tbl` `index0` ON (
            `doc_detail`.`document_detail_id` = `index0`.`document_index_text_FK_document_detail_id`
          )
          AND (
            `index0`.`document_index_text_name` = :textName
          )
        WHERE
          (
            `index0`.`document_index_text_value` = :textVal
          )
        GROUP BY `doc`.`document_id`
        ORDER BY `doc_detail`.`document_detail_FK_document_id` DESC
    ]]>
    </model:Query>

    <model:Query name="mysql_getByDocumentId">
        <![CDATA[
        SELECT
          `doc`.*,
          `doc_detail`.*
        FROM
          `documents_tbl` `doc`
          JOIN `documents_detail_tbl` `doc_detail` ON (
            `doc_detail`.`document_detail_FK_document_id` = :docId
          )
          AND (
            `doc_detail`.`document_detail_status` = 'PUBLISHED' OR
            `doc_detail`.`document_detail_status` = 'DRAFT'
          )
          AND (
            `doc_detail`.`document_detail_FK_language_id` = :languageId
          )
        GROUP BY `doc`.`document_id`
        ORDER BY `doc_detail`.`document_detail_FK_document_id` DESC
    ]]>
    </model:Query>
</model:Model>
